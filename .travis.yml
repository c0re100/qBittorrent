language: minimal
os: linux
dist: xenial

addons:
  apt:
    sources:
    - sourceline: 'ppa:mhier/libboost-latest'
    - sourceline: 'ppa:savoury1/backports'
    packages:
    - curl
    - gcc
    - g++
    - make
    - autoconf
    - automake
    - pkg-config
    - file
    - libgl1-mesa-dev
    - libegl1-mesa-dev
    - libdbus-1-dev
    - zlib1g-dev
    - libssl-dev
    - libtool
    - libboost1.74-dev
    - python3-semantic-version
    - python3-lxml
    - python3-requests
    - p7zip-full
    - libfontconfig1
    - libxcb-icccm4
    - libxcb-image0
    - libxcb-keysyms1
    - libxcb-render-util0
    - libxcb-xinerama0
    - libxcb-xkb1
    - libxkbcommon-x11-0

install:
- curl -sSkL --compressed https://raw.githubusercontent.com/engnr/qt-downloader/master/qt-downloader | python3 - linux desktop latest gcc_64 -o "${HOME}/Qt" -m qtbase qttools qtsvg icu
- export QT_BASE_DIR="$(ls -rd "${HOME}/Qt"/*/gcc_64 | head -1)"
- export QTDIR=$QT_BASE_DIR
- export PATH=$QT_BASE_DIR/bin:$PATH
- export LD_LIBRARY_PATH=$QT_BASE_DIR/lib:$LD_LIBRARY_PATH
- export PKG_CONFIG_PATH=$QT_BASE_DIR/lib/pkgconfig:$PKG_CONFIG_PATH
- export QT_QMAKE="${QT_BASE_DIR}/bin"
- sed -i.bak 's/Enterprise/OpenSource/g;s/licheck.*//g' "${QT_BASE_DIR}/mkspecs/qconfig.pri"

script:
- mkdir -p /tmp/libtorrent-rasterbar
- |
  [ -f /tmp/libtorrent-rasterbar/.unpack_ok ] || \
      curl -ksSfL https://github.com/arvidn/libtorrent/archive/RC_1_2.tar.gz | \
      tar -zxf - -C /tmp/libtorrent-rasterbar --strip-components 1
- touch "/tmp/libtorrent-rasterbar/.unpack_ok"
- cd "/tmp/libtorrent-rasterbar/"
- CXXFLAGS="-std=c++14" CPPFLAGS="-std=c++14" ./bootstrap.sh --prefix=/usr --with-boost-libdir="/usr/lib" --disable-debug --disable-dependency-tracking --disable-silent-rules --disable-maintainer-mode --with-libiconv
- make clean
- make -j$(nproc) V=0
- sudo make uninstall
- sudo make install
- cd "${TRAVIS_BUILD_DIR}"
- ./configure --prefix=/tmp/qbee/AppDir/usr --with-boost-libdir="/usr/lib" || (cat config.log && exit 1)
- make install -j$(nproc)
- '[ -x "/tmp/linuxdeploy-x86_64.AppImage" ] || curl -LC- -o /tmp/linuxdeploy-x86_64.AppImage "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"'
- '[ -x "/tmp/linuxdeploy-plugin-qt-x86_64.AppImage" ] || curl -LC- -o /tmp/linuxdeploy-plugin-qt-x86_64.AppImage https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage'
- chmod -v +x '/tmp/linuxdeploy-plugin-qt-x86_64.AppImage' '/tmp/linuxdeploy-x86_64.AppImage'
- cd "/tmp/qbee"
- mkdir -p "/tmp/qbee/AppDir/apprun-hooks/"
- echo 'export XDG_DATA_DIRS="${APPDIR:-"$(dirname "${BASH_SOURCE[0]}")/.."}/usr/share:${XDG_DATA_DIRS}:/usr/share:/usr/local/share"' > "/tmp/qbee/AppDir/apprun-hooks/xdg_data_dirs.sh"
- APPIMAGE_EXTRACT_AND_RUN=1 UPDATE_INFORMATION="zsync|https://github.com/${TRAVIS_REPO_SLUG}/releases/latest/download/qBittorrent-Enhanced-Edition.AppImage.zsync" OUTPUT='qBittorrent-Enhanced-Edition.AppImage' /tmp/linuxdeploy-x86_64.AppImage --appdir="/tmp/qbee/AppDir" --output=appimage --plugin qt

deploy:
  provider: releases
  overwrite: true
  api_key: "${GITHUB_TOKEN}"
  file:
  - qBittorrent-Enhanced-Edition.AppImage
  - qBittorrent-Enhanced-Edition.AppImage.zsync
  on:
    all_branches: true
    tags: true
